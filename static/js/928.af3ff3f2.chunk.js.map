{"version":3,"file":"static/js/928.af3ff3f2.chunk.js","mappings":"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","sources":["components/services/Api.js","webpack://goit-react-hw-05-movies/./src/pages/MovieDetails/MovieDetails.module.css?0c24","webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","webpack://goit-react-hw-05-movies/./src/components/Details/Details.module.css?cd8c","components/Details/Details.jsx","components/Reviews/Reviews.module.css","components/Reviews/Reviews.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '42a5b39371cdee67f851a43d6e8fc07d';\n\nexport const fetchTrending = async () => {\n  const trending = await fetch(`\n${BASE_URL}trending/movie/week?api_key=${API_KEY}`);\n  if (!trending.ok) {\n    throw new Error(trending.status);\n  }\n  const trendingJson = await trending.json();\n  return trendingJson;\n};\n\nexport const fetchSearch = async (query, page = 1) => {\n  const search =\n    await fetch(`${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=${page}&include_adult=false\n    `);\n  if (!search.ok) {\n    throw new Error(search.status);\n  }\n  const searchJson = await search.json();\n  return searchJson;\n};\n\nexport const fetchDetails = async id => {\n  const details =\n    await fetch(`${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US\n    `);\n  if (!details.ok) {\n    throw new Error(details.status);\n  }\n  const detailsJson = await details.json();\n  return detailsJson;\n};\n\nexport const fetchCredits = async id => {\n  const credits =\n    await fetch(`${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US\n    `);\n  if (!credits.ok) {\n    throw new Error(credits.status);\n  }\n  const creditsJson = await credits.json();\n  return creditsJson;\n};\n\nexport const fetchReviews = async id => {\n  const reviews =\n    await fetch(`${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1\n    `);\n  if (!reviews.ok) {\n    throw new Error(reviews.status);\n  }\n  const reviewsJson = await reviews.json();\n  return reviewsJson;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"link\":\"MovieDetails_link__U+v+7\"};","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Cast_list__GlWio\",\"img\":\"Cast_img__-isbW\",\"item\":\"Cast_item__a0CDL\"};","import { Spinner } from '../Loader/Loader';\nimport { fetchCredits } from '../services/Api';\nimport { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport s from './Cast.module.css';\n\nexport function Cast() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [actors, setActors] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchMoviesByCredits = async () => {\n      setIsLoading(true);\n      try {\n        const data = await fetchCredits(movieId);\n        setActors(data.cast);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMoviesByCredits();\n  }, [movieId]);\n\n  const elements = actors.map(({ id, name, profile_path }) => {\n    return (\n      <li className={s.item} key={id}>\n        <img\n          className={s.img}\n          src={`https://image.tmdb.org/t/p/w500/${profile_path}`}\n          alt={name}\n        />{' '}\n        <p>{name}</p>\n      </li>\n    );\n  });\n  return (\n    <>\n      {isLoading && <Spinner />}\n      {actors.length > 0 ? (\n        <ul className={s.list}>{elements}</ul>\n      ) : (\n        <p>We don't have information about cast</p>\n      )}\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Details_item__clcq7\",\"description\":\"Details_description__57LB4\"};","import PropTypes from 'prop-types';\nimport s from './Details.module.css';\n\nexport function OneMovieDetails({\n  id,\n  title,\n  poster_path,\n  release_date,\n  vote_average,\n  overview,\n  genres,\n}) {\n  const score = (10 * vote_average).toFixed();\n  const releaseYear = new Date(release_date).getFullYear();\n\n  const genresList = genres?.map(genre => genre.name).join(', ');\n\n  return (\n    <div>\n      <div className={s.item} key={id}>\n        <img\n          src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n          alt={title}\n          className={s.img}\n          width=\"232\"\n        />\n        <div className={s.description}>\n          <h2 className={s.title}>\n            {title} ({releaseYear})\n          </h2>\n          <p className={s.text}>\n            User score: {score ? score : 'Sorry, no information'}%\n          </p>\n          <h3 className={s.title}>Overview</h3>\n          <p className={s.text}>\n            {overview ? overview : 'Sorry, no information'}\n          </p>\n          <h3 className={s.title}>Genres</h3>\n          <p className={s.text}>\n            {genresList.length > 0 ? genresList : 'Sorry, no information'}\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nOneMovieDetails.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  poster_path: PropTypes.string,\n  release_date: PropTypes.string,\n  vote_average: PropTypes.number,\n  overview: PropTypes.string,\n  genres: PropTypes.arrayOf(PropTypes.object.isRequired),\n};\n","// extracted by mini-css-extract-plugin\nexport default {};","import { Spinner } from '../Loader/Loader';\nimport { fetchReviews } from '../services/Api';\nimport { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport s from './Reviews.module.css';\n\nexport function Reviews() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchMoviesReviews = async () => {\n      setIsLoading(true);\n      try {\n        const data = await fetchReviews(movieId);\n\n        setReviews(data.results);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMoviesReviews();\n  }, [movieId]);\n\n  const elements = reviews.map(({ id, author, content }) => {\n    return (\n      <li key={id}>\n        <h3>Author: {author}</h3>\n        <p>{content}</p>\n      </li>\n    );\n  });\n  return (\n    <>\n      {isLoading && <Spinner />}\n      {reviews.length > 0 ? (\n        <ul className={s.list}>{elements}</ul>\n      ) : (\n        <p>We don't have any reviews for this movie, sorry</p>\n      )}\n    </>\n  );\n}\n","import s from './MovieDetails.module.css';\n\nimport { Link, Route, Routes, useNavigate, useParams } from 'react-router-dom';\nimport { Cast } from 'components/Cast/Cast';\nimport { OneMovieDetails } from '../../components/Details/Details';\nimport { Reviews } from 'components/Reviews/Reviews';\nimport { Spinner } from 'components/Loader/Loader';\nimport { useEffect, useState } from 'react';\nimport { fetchDetails } from '../../components/services/Api';\nimport { useLocation } from 'react-router-dom';\n\nfunction MovieDetails() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [movie, setMovie] = useState({});\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchMoviesByID = async () => {\n      setIsLoading(true);\n      try {\n        const data = await fetchDetails(movieId);\n        setMovie(data);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMoviesByID();\n  }, [movieId]);\n\n  const from = location.state?.from || '/';\n  const goBack = () => navigate(from);\n\n  const isMovie = Object.keys(movie).length > 0;\n\n  return (\n    <>\n      {isLoading && <Spinner />}\n      {isMovie && (\n        <>\n          <button className={s.btn} type=\"button\" onClick={goBack}>\n            Go Back\n          </button>\n          <OneMovieDetails {...movie} />\n          <ul>\n            <Link className={s.link} state={{ from }} to={'cast'}>\n              Cast\n            </Link>\n\n            <Link className={s.link} state={{ from }} to={'reviews'}>\n              Reviews\n            </Link>\n          </ul>\n        </>\n      )}\n      <Routes>\n        <Route path={'cast'} element={<Cast />} />\n        <Route path={'reviews'} element={<Reviews />} />\n      </Routes>\n    </>\n  );\n}\n\nexport default MovieDetails;\n"],"names":["BASE_URL","API_KEY","fetchTrending","fetch","trending","ok","Error","status","json","trendingJson","fetchSearch","query","page","search","searchJson","fetchDetails","id","details","detailsJson","fetchCredits","credits","creditsJson","fetchReviews","reviews","reviewsJson","Cast","useState","isLoading","setIsLoading","actors","setActors","movieId","useParams","useEffect","fetchMoviesByCredits","data","cast","console","log","message","elements","map","name","profile_path","className","s","src","alt","length","OneMovieDetails","title","poster_path","release_date","vote_average","overview","genres","score","toFixed","releaseYear","Date","getFullYear","genresList","genre","join","width","Reviews","setReviews","fetchMoviesReviews","results","author","content","movie","setMovie","navigate","useNavigate","location","useLocation","fetchMoviesByID","from","state","isMovie","Object","keys","type","onClick","to","path","element"],"sourceRoot":""}