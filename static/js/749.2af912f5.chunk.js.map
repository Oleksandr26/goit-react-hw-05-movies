{"version":3,"file":"static/js/749.2af912f5.chunk.js","mappings":"+PACA,EAAwB,wB,SCmCxB,MA9BA,WACE,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAEMC,EAAW,mCAAG,2FAClBD,GAAa,GADK,mBAIGE,EAAAA,EAAAA,MAJH,OAIVC,EAJU,OAKhBL,EAAUK,EAAKC,SALC,gDAOhBC,QAAQC,IAAI,UAAW,KAAMC,SAPb,yBAShBP,GAAa,GATG,4EAAH,qDAiBjB,OAJAQ,EAAAA,EAAAA,YAAU,WACRP,GACD,GAAE,KAGD,4BACGF,IAAa,SAAC,IAAD,KACd,eAAIU,UAAWC,EAAf,6BACA,SAAC,IAAD,CAAYb,OAAQA,MAGzB,C,4ECjCD,EAAuB,wBAAvB,EAAsD,wBAAtD,EAAsF,yBAAtF,EAAsH,wBAAtH,EAAoJ,uB,SCG7I,SAASc,EAAT,GAAiC,IAAXd,EAAU,EAAVA,OACrBe,GAAWC,EAAAA,EAAAA,MAEXC,EAAWjB,EAAOkB,KAAI,YAAmC,IAAhCC,EAA+B,EAA/BA,GAAIC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,cACxC,OACE,eAAIT,UAAWC,EAAf,UACE,UAAC,KAAD,CACES,GAAE,kBAAaH,GACfI,MAAO,CAAEC,KAAMT,GACfH,UAAWC,EAHb,WAKE,gBACEY,IAAG,0CAAqCJ,GACxCK,IAAKN,EACLR,UAAWC,EACXc,MAAM,SAER,cAAGf,UAAWC,EAAd,SAAwBO,QAZAD,EAgB/B,IACD,OAAO,eAAIP,UAAWC,EAAf,SAAwBI,GAChC,C,sLC3BKW,EAAW,gCACXC,EAAU,mCAEHxB,EAAa,mCAAG,sGACJyB,MAAM,KAAD,OAC5BF,EAD4B,uCACWC,IAFZ,WACrBE,EADqB,QAGbC,GAHa,sBAInB,IAAIC,MAAMF,EAASG,QAJA,uBAMAH,EAASI,OANT,cAMrBC,EANqB,yBAOpBA,GAPoB,2CAAH,qDAUbC,EAAW,mCAAG,WAAOC,GAAP,8FAAcC,EAAd,+BAAqB,EAArB,SAEjBT,MAAM,GAAD,OAAIF,EAAJ,gCAAoCC,EAApC,iCAAoES,EAApE,iBAAkFC,EAAlF,+BAFY,WACnBC,EADmB,QAIbR,GAJa,sBAKjB,IAAIC,MAAMO,EAAON,QALA,uBAOAM,EAAOL,OAPP,cAOnBM,EAPmB,yBAQlBA,GARkB,4CAAH,sDAWXC,EAAY,mCAAG,WAAMvB,GAAN,yFAElBW,MAAM,GAAD,OAAIF,EAAJ,iBAAqBT,EAArB,oBAAmCU,EAAnC,0BAFa,WACpBc,EADoB,QAIbX,GAJa,sBAKlB,IAAIC,MAAMU,EAAQT,QALA,uBAOAS,EAAQR,OAPR,cAOpBS,EAPoB,yBAQnBA,GARmB,2CAAH,sDAWZC,EAAY,mCAAG,WAAM1B,GAAN,yFAElBW,MAAM,GAAD,OAAIF,EAAJ,iBAAqBT,EAArB,4BAA2CU,EAA3C,0BAFa,WACpBiB,EADoB,QAIbd,GAJa,sBAKlB,IAAIC,MAAMa,EAAQZ,QALA,uBAOAY,EAAQX,OAPR,cAOpBY,EAPoB,yBAQnBA,GARmB,2CAAH,sDAWZC,EAAY,mCAAG,WAAM7B,GAAN,yFAElBW,MAAM,GAAD,OAAIF,EAAJ,iBAAqBT,EAArB,4BAA2CU,EAA3C,iCAFa,WACpBoB,EADoB,QAIbjB,GAJa,sBAKlB,IAAIC,MAAMgB,EAAQf,QALA,uBAOAe,EAAQd,OAPR,cAOpBe,EAPoB,yBAQnBA,GARmB,2CAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/components/HomePage/HomePage.module.css?b0f5","components/HomePage/HomePage.jsx","webpack://goit-react-hw-05-movies/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","components/services/Api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"HomePage_title__Iqtik\"};","import { useState, useEffect } from 'react';\nimport { fetchTrending } from '../services/Api';\nimport { MoviesList } from '../MovieList/MovieList';\nimport { Spinner } from 'components/Loader/Loader';\nimport s from './HomePage.module.css';\n\nfunction HomePage() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const fetchMovies = async () => {\n    setIsLoading(true);\n\n    try {\n      const data = await fetchTrending();\n      setMovies(data.results);\n    } catch (error) {\n      console.log('error: ', error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchMovies();\n  }, []);\n\n  return (\n    <main>\n      {isLoading && <Spinner />}\n      <h2 className={s.title}>Popular movies</h2>\n      <MoviesList movies={movies} />\n    </main>\n  );\n}\n\nexport default HomePage;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MovieList_list__yjDCC\",\"item\":\"MovieList_item__tDivI\",\"title\":\"MovieList_title__QyMtJ\",\"link\":\"MovieList_link__+cn-g\",\"img\":\"MovieList_img__Tmz2C\"};","import { Link, useLocation } from 'react-router-dom';\nimport s from './MovieList.module.css';\nimport PropTypes from 'prop-types';\n\nexport function MoviesList({ movies }) {\n  const location = useLocation();\n\n  const elements = movies.map(({ id, title, backdrop_path }) => {\n    return (\n      <li className={s.item} key={id}>\n        <Link\n          to={`/movies/${id}`}\n          state={{ from: location }}\n          className={s.link}\n        >\n          <img\n            src={`https://image.tmdb.org/t/p/w500/${backdrop_path}`}\n            alt={title}\n            className={s.img}\n            width=\"200\"\n          />\n          <p className={s.title}>{title}</p>\n        </Link>\n      </li>\n    );\n  });\n  return <ul className={s.list}>{elements}</ul>;\n}\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string,\n    })\n  ),\n};\n","const BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '42a5b39371cdee67f851a43d6e8fc07d';\n\nexport const fetchTrending = async () => {\n  const trending = await fetch(`\n${BASE_URL}trending/movie/week?api_key=${API_KEY}`);\n  if (!trending.ok) {\n    throw new Error(trending.status);\n  }\n  const trendingJson = await trending.json();\n  return trendingJson;\n};\n\nexport const fetchSearch = async (query, page = 1) => {\n  const search =\n    await fetch(`${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=${page}&include_adult=false\n    `);\n  if (!search.ok) {\n    throw new Error(search.status);\n  }\n  const searchJson = await search.json();\n  return searchJson;\n};\n\nexport const fetchDetails = async id => {\n  const details =\n    await fetch(`${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US\n    `);\n  if (!details.ok) {\n    throw new Error(details.status);\n  }\n  const detailsJson = await details.json();\n  return detailsJson;\n};\n\nexport const fetchCredits = async id => {\n  const credits =\n    await fetch(`${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US\n    `);\n  if (!credits.ok) {\n    throw new Error(credits.status);\n  }\n  const creditsJson = await credits.json();\n  return creditsJson;\n};\n\nexport const fetchReviews = async id => {\n  const reviews =\n    await fetch(`${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1\n    `);\n  if (!reviews.ok) {\n    throw new Error(reviews.status);\n  }\n  const reviewsJson = await reviews.json();\n  return reviewsJson;\n};\n"],"names":["useState","movies","setMovies","isLoading","setIsLoading","fetchMovies","fetchTrending","data","results","console","log","message","useEffect","className","s","MoviesList","location","useLocation","elements","map","id","title","backdrop_path","to","state","from","src","alt","width","BASE_URL","API_KEY","fetch","trending","ok","Error","status","json","trendingJson","fetchSearch","query","page","search","searchJson","fetchDetails","details","detailsJson","fetchCredits","credits","creditsJson","fetchReviews","reviews","reviewsJson"],"sourceRoot":""}